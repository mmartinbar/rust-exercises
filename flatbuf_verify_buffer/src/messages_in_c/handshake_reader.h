#ifndef HANDSHAKE_READER_H
#define HANDSHAKE_READER_H

/* Generated by flatcc 0.5.3-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef struct Handshake_Version Handshake_Version_t;
typedef const Handshake_Version_t *Handshake_Version_struct_t;
typedef Handshake_Version_t *Handshake_Version_mutable_struct_t;
typedef const Handshake_Version_t *Handshake_Version_vec_t;
typedef Handshake_Version_t *Handshake_Version_mutable_vec_t;

typedef const struct Handshake_PingMessage_table *Handshake_PingMessage_table_t;
typedef const flatbuffers_uoffset_t *Handshake_PingMessage_vec_t;
typedef flatbuffers_uoffset_t *Handshake_PingMessage_mutable_vec_t;
typedef const struct Handshake_PongMessage_table *Handshake_PongMessage_table_t;
typedef const flatbuffers_uoffset_t *Handshake_PongMessage_vec_t;
typedef flatbuffers_uoffset_t *Handshake_PongMessage_mutable_vec_t;
#ifndef Handshake_Version_identifier
#define Handshake_Version_identifier flatbuffers_identifier
#endif
#define Handshake_Version_type_hash ((flatbuffers_thash_t)0x9ca81904)
#define Handshake_Version_type_identifier "\x04\x19\xa8\x9c"
#ifndef Handshake_PingMessage_identifier
#define Handshake_PingMessage_identifier flatbuffers_identifier
#endif
#define Handshake_PingMessage_type_hash ((flatbuffers_thash_t)0x75e87a27)
#define Handshake_PingMessage_type_identifier "\x27\x7a\xe8\x75"
#ifndef Handshake_PongMessage_identifier
#define Handshake_PongMessage_identifier flatbuffers_identifier
#endif
#define Handshake_PongMessage_type_hash ((flatbuffers_thash_t)0x58608479)
#define Handshake_PongMessage_type_identifier "\x79\x84\x60\x58"


struct Handshake_Version {
    alignas(1) uint8_t major;
    alignas(1) uint8_t minor;
};
static_assert(sizeof(Handshake_Version_t) == 2, "struct size mismatch");

static inline const Handshake_Version_t *Handshake_Version__const_ptr_add(const Handshake_Version_t *p, size_t i) { return p + i; }
static inline Handshake_Version_t *Handshake_Version__ptr_add(Handshake_Version_t *p, size_t i) { return p + i; }
static inline Handshake_Version_struct_t Handshake_Version_vec_at(Handshake_Version_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t Handshake_Version__size() { return 2; }
static inline size_t Handshake_Version_vec_len(Handshake_Version_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(Handshake_Version)

__flatbuffers_define_struct_scalar_field(Handshake_Version, major, flatbuffers_uint8, uint8_t)
__flatbuffers_define_struct_scalar_field(Handshake_Version, minor, flatbuffers_uint8, uint8_t)


struct Handshake_PingMessage_table { uint8_t unused__; };

static inline size_t Handshake_PingMessage_vec_len(Handshake_PingMessage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Handshake_PingMessage_table_t Handshake_PingMessage_vec_at(Handshake_PingMessage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Handshake_PingMessage_table_t, vec, i, 0)
__flatbuffers_table_as_root(Handshake_PingMessage)

__flatbuffers_define_struct_field(0, Handshake_PingMessage, version, Handshake_Version_struct_t, 0)
__flatbuffers_define_scalar_field(1, Handshake_PingMessage, timestamp, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_string_field(2, Handshake_PingMessage, message, 0)

struct Handshake_PongMessage_table { uint8_t unused__; };

static inline size_t Handshake_PongMessage_vec_len(Handshake_PongMessage_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Handshake_PongMessage_table_t Handshake_PongMessage_vec_at(Handshake_PongMessage_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Handshake_PongMessage_table_t, vec, i, 0)
__flatbuffers_table_as_root(Handshake_PongMessage)

__flatbuffers_define_struct_field(0, Handshake_PongMessage, version, Handshake_Version_struct_t, 0)
__flatbuffers_define_scalar_field(1, Handshake_PongMessage, timestamp, flatbuffers_uint64, uint64_t, UINT64_C(0))

#include "flatcc/flatcc_epilogue.h"
#endif /* HANDSHAKE_READER_H */
